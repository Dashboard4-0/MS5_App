{
  "name": "ms5-floor-dashboard-aks",
  "version": "1.0.0",
  "description": "MS5.0 Floor Dashboard - AKS Production Build Configuration",
  "scripts": {
    "build:web:production": "cross-env NODE_ENV=production webpack --mode production --config webpack.aks.config.js",
    "build:pwa:production": "npm run build:web:production && npm run build:service-worker && npm run build:manifest",
    "build:service-worker": "workbox generateSW workbox-config.js",
    "build:manifest": "node scripts/generate-manifest.js",
    "build:tablet": "npm run build:web:production && npm run optimize:tablet",
    "build:factory": "npm run build:web:production && npm run optimize:factory",
    "build:aks": "npm run build:pwa:production && npm run optimize:aks",
    "optimize:tablet": "node scripts/optimize-tablet.js",
    "optimize:factory": "node scripts/optimize-factory.js",
    "optimize:aks": "node scripts/optimize-aks.js",
    "docker:build": "docker build -f Dockerfile.aks -t ms5-frontend:aks .",
    "docker:build:tablet": "docker build -f Dockerfile.aks --build-arg TABLET_OPTIMIZED=true -t ms5-frontend:tablet .",
    "docker:build:factory": "docker build -f Dockerfile.aks --build-arg FACTORY_NETWORK=true -t ms5-frontend:factory .",
    "docker:push": "docker push ms5-frontend:aks",
    "k8s:deploy": "kubectl apply -f k8s/frontend/",
    "k8s:deploy:tablet": "kubectl apply -f k8s/frontend/tablet/",
    "k8s:deploy:factory": "kubectl apply -f k8s/frontend/factory/",
    "k8s:undeploy": "kubectl delete -f k8s/frontend/",
    "k8s:status": "kubectl get pods -l app=ms5-frontend -o wide",
    "k8s:logs": "kubectl logs -l app=ms5-frontend -f",
    "k8s:port-forward": "kubectl port-forward svc/ms5-frontend-service 8080:80",
    "test:aks": "npm run test:unit && npm run test:integration:aks",
    "test:integration:aks": "jest --config jest.aks.config.js",
    "test:e2e:aks": "cypress run --config-file cypress.aks.config.js",
    "lint:aks": "eslint . --ext .js,.jsx,.ts,.tsx --config .eslintrc.aks.js",
    "analyze:bundle": "webpack-bundle-analyzer build/static/js/*.js",
    "analyze:size": "bundlesize",
    "validate:aks": "npm run lint:aks && npm run test:aks && npm run analyze:bundle",
    "deploy:aks": "npm run validate:aks && npm run build:aks && npm run docker:build && npm run docker:push && npm run k8s:deploy",
    "deploy:aks:tablet": "npm run validate:aks && npm run build:tablet && npm run docker:build:tablet && npm run docker:push && npm run k8s:deploy:tablet",
    "deploy:aks:factory": "npm run validate:aks && npm run build:factory && npm run docker:build:factory && npm run docker:push && npm run k8s:deploy:factory",
    "rollback:aks": "kubectl rollout undo deployment/ms5-frontend-deployment",
    "scale:aks": "kubectl scale deployment ms5-frontend-deployment --replicas=",
    "health:aks": "curl -f http://localhost:8080/health || exit 1",
    "ready:aks": "curl -f http://localhost:8080/ready || exit 1",
    "live:aks": "curl -f http://localhost:8080/live || exit 1",
    "monitor:aks": "kubectl top pods -l app=ms5-frontend",
    "logs:aks": "kubectl logs -l app=ms5-frontend --tail=100 -f",
    "events:aks": "kubectl get events --sort-by=.metadata.creationTimestamp",
    "describe:aks": "kubectl describe deployment ms5-frontend-deployment",
    "restart:aks": "kubectl rollout restart deployment/ms5-frontend-deployment",
    "update:aks": "kubectl set image deployment/ms5-frontend-deployment ms5-frontend=ms5-frontend:aks",
    "canary:aks": "kubectl apply -f k8s/frontend/canary/",
    "blue-green:aks": "kubectl apply -f k8s/frontend/blue-green/",
    "cleanup:aks": "kubectl delete -f k8s/frontend/ --ignore-not-found=true",
    "backup:aks": "kubectl get all -l app=ms5-frontend -o yaml > backup/frontend-$(date +%Y%m%d-%H%M%S).yaml",
    "restore:aks": "kubectl apply -f backup/",
    "security:scan": "npm audit && docker scan ms5-frontend:aks",
    "performance:test": "artillery run tests/performance/aks-load-test.yml",
    "load:test": "k6 run tests/performance/aks-load-test.js",
    "stress:test": "artillery run tests/performance/aks-stress-test.yml",
    "chaos:test": "chaos monkey run tests/chaos/aks-chaos-test.yml",
    "compliance:check": "npm run security:scan && npm run lint:aks && npm run test:aks",
    "quality:gate": "npm run compliance:check && npm run performance:test",
    "release:aks": "npm run quality:gate && npm run deploy:aks",
    "hotfix:aks": "npm run build:aks && npm run docker:build && npm run docker:push && npm run k8s:deploy",
    "feature:aks": "npm run validate:aks && npm run build:aks && npm run docker:build && npm run docker:push && npm run canary:aks"
  },
  "devDependencies": {
    "cross-env": "^7.0.3",
    "webpack": "^5.88.0",
    "webpack-cli": "^5.1.4",
    "webpack-bundle-analyzer": "^4.9.1",
    "workbox-webpack-plugin": "^6.6.0",
    "workbox-cli": "^7.0.0",
    "bundlesize": "^0.18.2",
    "artillery": "^2.0.0",
    "k6": "^0.0.0",
    "cypress": "^13.0.0",
    "jest": "^29.2.1",
    "eslint": "^8.19.0",
    "docker-scan": "^0.0.0",
    "chaos-monkey": "^0.0.0"
  },
  "bundlesize": [
    {
      "path": "./build/static/js/*.js",
      "maxSize": "500 kB"
    },
    {
      "path": "./build/static/css/*.css",
      "maxSize": "50 kB"
    }
  ],
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  }
}