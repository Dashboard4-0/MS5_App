# MS5.0 Floor Dashboard - AKS Nginx Configuration
# 
# This configuration optimizes Nginx for:
# - React Native Web deployment
# - Tablet-specific optimizations
# - PWA capabilities
# - Offline-first architecture
# - Factory environment support
# - Security hardening
# - Kubernetes health checks

# Global configuration
user appuser;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events configuration
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP configuration
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: blob:; connect-src 'self' https://api.ms5dashboard.com wss://api.ms5dashboard.com; worker-src 'self' blob:;" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    
    # Upstream configuration for backend services
    upstream backend {
        server ms5-backend-service:8000;
        keepalive 32;
    }
    
    # WebSocket upstream configuration
    upstream websocket_backend {
        server ms5-backend-service:8000;
        keepalive 32;
    }
    
    # Map for WebSocket connection upgrade
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Main server configuration
    server {
        listen 8080;
        server_name _;
        root /app/public;
        index index.html;
        
        # Security headers for main server
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Tablet-specific optimizations
        add_header X-Viewport-Meta "width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, orientation=landscape" always;
        
        # PWA headers
        add_header X-PWA-Enabled "true" always;
        add_header X-Offline-Support "true" always;
        
        # Health check endpoints for Kubernetes
        location = /health {
            access_log off;
            try_files /health.json =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        location = /ready {
            access_log off;
            try_files /ready.json =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        location = /live {
            access_log off;
            try_files /live.json =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Health check detail page
        location = /health-detail {
            try_files /health-detail.html =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
        
        # API proxy
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
            
            # Factory network timeout handling
            proxy_send_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # WebSocket proxy
        location /ws/ {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            
            # WebSocket specific settings
            proxy_buffering off;
            proxy_cache off;
        }
        
        # Service Worker
        location = /sw.js {
            try_files /sw.js =404;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Service-Worker-Allowed "/";
        }
        
        # PWA Manifest
        location = /manifest.json {
            try_files /manifest.json =404;
            add_header Cache-Control "public, max-age=86400";
            add_header Content-Type "application/manifest+json";
        }
        
        # Browser config
        location = /browserconfig.xml {
            try_files /browserconfig.xml =404;
            add_header Cache-Control "public, max-age=86400";
            add_header Content-Type "application/xml";
        }
        
        # Static assets with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            limit_req zone=static burst=100 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Enable gzip for static assets
            gzip_static on;
            
            # Security headers for static assets
            add_header X-Content-Type-Options "nosniff" always;
            
            # CORS headers for fonts
            if ($request_uri ~* \.(woff|woff2|ttf|eot)$) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            }
        }
        
        # HTML files with no caching
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            
            # Security headers for HTML
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }
        
        # Offline page
        location = /offline {
            try_files /offline.html =404;
            add_header Cache-Control "public, max-age=86400";
        }
        
        # SPA routing - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers for main app
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # PWA headers
            add_header X-PWA-Enabled "true" always;
            add_header X-Offline-Support "true" always;
            
            # Tablet-specific headers
            add_header X-Viewport-Meta "width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, orientation=landscape" always;
        }
        
        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /index.html;
    }
    
    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}