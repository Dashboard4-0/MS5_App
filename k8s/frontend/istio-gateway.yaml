apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: ms5-frontend-gateway
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: gateway
    tier: frontend
    environment: production
    deployment: aks
  annotations:
    description: "MS5.0 Floor Dashboard Istio Gateway for AKS"
    contact: "team@ms5floor.com"
    version: "1.0.0"
spec:
  selector:
    istio: ingressgateway
  servers:
  # HTTP to HTTPS redirect
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - ms5floor.com
    - www.ms5floor.com
    - api.ms5floor.com
    - cdn.ms5floor.com
    - ws.ms5floor.com
    - status.ms5floor.com
    tls:
      httpsRedirect: true
  # HTTPS with TLS termination
  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - ms5floor.com
    - www.ms5floor.com
    - api.ms5floor.com
    - cdn.ms5floor.com
    - ws.ms5floor.com
    - status.ms5floor.com
    tls:
      mode: SIMPLE
      credentialName: ms5-tls-secret
  # WebSocket gateway
  - port:
      number: 8080
      name: websocket
      protocol: HTTP
    hosts:
    - ws.ms5floor.com
    - wss.ms5floor.com
    tls:
      mode: SIMPLE
      credentialName: ms5-websocket-tls-secret
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: ms5-frontend-virtual-service
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: virtual-service
    tier: frontend
    environment: production
    deployment: aks
  annotations:
    description: "MS5.0 Floor Dashboard Istio Virtual Service for AKS"
    contact: "team@ms5floor.com"
    version: "1.0.0"
spec:
  hosts:
  - ms5floor.com
  - www.ms5floor.com
  - api.ms5floor.com
  - cdn.ms5floor.com
  - ws.ms5floor.com
  - status.ms5floor.com
  gateways:
  - ms5-frontend-gateway
  http:
  # Main application routing
  - match:
    - uri:
        prefix: /
      headers:
        host:
          exact: ms5floor.com
    - uri:
        prefix: /
      headers:
        host:
          exact: www.ms5floor.com
    route:
    - destination:
        host: ms5-frontend-service
        port:
          number: 80
      weight: 100
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
    fault:
      delay:
        percentage:
          value: 0.1
        fixedDelay: 5s
  # API routing
  - match:
    - uri:
        prefix: /api/
      headers:
        host:
          exact: api.ms5floor.com
    route:
    - destination:
        host: ms5-frontend-service
        port:
          number: 80
      weight: 100
    timeout: 60s
    retries:
      attempts: 3
      perTryTimeout: 20s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
    fault:
      delay:
        percentage:
          value: 0.1
        fixedDelay: 5s
  # CDN routing
  - match:
    - uri:
        prefix: /
      headers:
        host:
          exact: cdn.ms5floor.com
    route:
    - destination:
        host: ms5-frontend-service
        port:
          number: 80
      weight: 100
    timeout: 30s
    retries:
      attempts: 2
      perTryTimeout: 15s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
  # WebSocket routing
  - match:
    - uri:
        prefix: /ws
      headers:
        host:
          exact: ws.ms5floor.com
        upgrade:
          exact: websocket
    - uri:
        prefix: /ws
      headers:
        host:
          exact: wss.ms5floor.com
        upgrade:
          exact: websocket
    route:
    - destination:
        host: ms5-frontend-service
        port:
          number: 80
      weight: 100
    timeout: 86400s  # 24 hours for WebSocket connections
    retries:
      attempts: 1
      perTryTimeout: 60s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
    fault:
      delay:
        percentage:
          value: 0.05
        fixedDelay: 2s
  # Status page routing
  - match:
    - uri:
        prefix: /
      headers:
        host:
          exact: status.ms5floor.com
    route:
    - destination:
        host: ms5-frontend-service
        port:
          number: 80
      weight: 100
    timeout: 10s
    retries:
      attempts: 1
      perTryTimeout: 5s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: ms5-frontend-destination-rule
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: destination-rule
    tier: frontend
    environment: production
    deployment: aks
  annotations:
    description: "MS5.0 Floor Dashboard Istio Destination Rule for AKS"
    contact: "team@ms5floor.com"
    version: "1.0.0"
spec:
  host: ms5-frontend-service
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        tcpKeepalive:
          time: 7200s
          interval: 75s
          probes: 9
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
        minHealthPercent: 30
    circuitBreaker:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
    outlierDetection:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
  subsets:
  - name: v1
    labels:
      version: v1
    trafficPolicy:
      loadBalancer:
        simple: LEAST_CONN
      connectionPool:
        tcp:
          maxConnections: 50
          connectTimeout: 30s
        http:
          http1MaxPendingRequests: 50
          http2MaxRequests: 500
          maxRequestsPerConnection: 10
          maxRetries: 3
  - name: v2
    labels:
      version: v2
    trafficPolicy:
      loadBalancer:
        simple: LEAST_CONN
      connectionPool:
        tcp:
          maxConnections: 50
          connectTimeout: 30s
        http:
          http1MaxPendingRequests: 50
          http2MaxRequests: 500
          maxRequestsPerConnection: 10
          maxRetries: 3
