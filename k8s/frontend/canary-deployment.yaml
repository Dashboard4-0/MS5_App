apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: ms5-frontend-canary-rollout
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: frontend
    tier: frontend
    environment: production
    deployment: aks
    strategy: canary
  annotations:
    description: "MS5.0 Floor Dashboard Canary Deployment for AKS"
    contact: "team@ms5floor.com"
    version: "1.0.0"
spec:
  replicas: 3
  strategy:
    canary:
      # Canary service for new version
      canaryService: ms5-frontend-canary
      # Stable service for current version
      stableService: ms5-frontend-stable
      # Traffic routing steps
      steps:
      # Step 1: 10% traffic to canary
      - setWeight: 10
      - pause:
          duration: 5m
        analysis:
          templates:
          - templateName: success-rate
          - templateName: error-rate
          - templateName: latency
          args:
          - name: service-name
            value: ms5-frontend-canary
          - name: service-namespace
            value: ms5-frontend
          - name: success-rate-threshold
            value: "99"
          - name: error-rate-threshold
            value: "1"
          - name: latency-threshold
            value: "200"
      # Step 2: 25% traffic to canary
      - setWeight: 25
      - pause:
          duration: 10m
        analysis:
          templates:
          - templateName: success-rate
          - templateName: error-rate
          - templateName: latency
          args:
          - name: service-name
            value: ms5-frontend-canary
          - name: service-namespace
            value: ms5-frontend
          - name: success-rate-threshold
            value: "99"
          - name: error-rate-threshold
            value: "1"
          - name: latency-threshold
            value: "200"
      # Step 3: 50% traffic to canary
      - setWeight: 50
      - pause:
          duration: 15m
        analysis:
          templates:
          - templateName: success-rate
          - templateName: error-rate
          - templateName: latency
          args:
          - name: service-name
            value: ms5-frontend-canary
          - name: service-namespace
            value: ms5-frontend
          - name: success-rate-threshold
            value: "99"
          - name: error-rate-threshold
            value: "1"
          - name: latency-threshold
            value: "200"
      # Step 4: 75% traffic to canary
      - setWeight: 75
      - pause:
          duration: 10m
        analysis:
          templates:
          - templateName: success-rate
          - templateName: error-rate
          - templateName: latency
          args:
          - name: service-name
            value: ms5-frontend-canary
          - name: service-namespace
            value: ms5-frontend
          - name: success-rate-threshold
            value: "99"
          - name: error-rate-threshold
            value: "1"
          - name: latency-threshold
            value: "200"
      # Step 5: 100% traffic to canary (promotion)
      - setWeight: 100
      - pause:
          duration: 5m
        analysis:
          templates:
          - templateName: success-rate
          - templateName: error-rate
          - templateName: latency
          args:
          - name: service-name
            value: ms5-frontend-canary
          - name: service-namespace
            value: ms5-frontend
          - name: success-rate-threshold
            value: "99"
          - name: error-rate-threshold
            value: "1"
          - name: latency-threshold
            value: "200"
      # Traffic routing based on headers
      trafficRouting:
        istio:
          virtualService:
            name: ms5-frontend-canary-vs
            namespace: ms5-frontend
      # Rollback configuration
      rollbackWindow:
        deployment: 5m
        replicaSet: 5m
      # Scale down delay
      scaleDownDelaySeconds: 30
      # Scale down revision limit
      scaleDownDelayRevisionLimit: 2
  selector:
    matchLabels:
      app: ms5-frontend
      component: frontend
  template:
    metadata:
      labels:
        app: ms5-frontend
        component: frontend
        tier: frontend
        environment: production
        deployment: aks
        strategy: canary
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: ms5-frontend-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: ms5-frontend
        image: ms5-frontend:aks
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: API_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: API_BASE_URL
        - name: WS_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: WS_BASE_URL
        - name: CDN_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: CDN_BASE_URL
        - name: PWA_ENABLED
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: PWA_ENABLED
        - name: OFFLINE_MODE
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: OFFLINE_MODE
        - name: FACTORY_NETWORK
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: FACTORY_NETWORK
        - name: TABLET_OPTIMIZED
          valueFrom:
            configMapKeyRef:
              name: ms5-frontend-config
              key: TABLET_OPTIMIZED
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /live
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: tablet-config
          mountPath: /etc/nginx/tablet.config
          subPath: tablet.config
          readOnly: true
        - name: factory-config
          mountPath: /etc/nginx/factory.config
          subPath: factory.config
          readOnly: true
        - name: pwa-config
          mountPath: /etc/nginx/pwa.config
          subPath: pwa.config
          readOnly: true
        - name: offline-config
          mountPath: /etc/nginx/offline.config
          subPath: offline.config
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: var-cache
          mountPath: /var/cache/nginx
        - name: var-log
          mountPath: /var/log/nginx
      volumes:
      - name: nginx-config
        configMap:
          name: ms5-frontend-config
      - name: tablet-config
        configMap:
          name: ms5-frontend-config
      - name: factory-config
        configMap:
          name: ms5-frontend-config
      - name: pwa-config
        configMap:
          name: ms5-frontend-config
      - name: offline-config
        configMap:
          name: ms5-frontend-config
      - name: tmp
        emptyDir: {}
      - name: var-cache
        emptyDir: {}
      - name: var-log
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ms5-frontend
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: ms5-frontend-stable
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: frontend
    tier: frontend
    environment: production
    deployment: aks
    service-type: stable
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: ms5-frontend
    component: frontend
    service-type: stable
---
apiVersion: v1
kind: Service
metadata:
  name: ms5-frontend-canary
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: frontend
    tier: frontend
    environment: production
    deployment: aks
    service-type: canary
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: ms5-frontend
    component: frontend
    service-type: canary
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: ms5-frontend-canary-vs
  namespace: ms5-frontend
  labels:
    app: ms5-frontend
    component: virtual-service
    tier: frontend
    environment: production
    deployment: aks
    strategy: canary
spec:
  hosts:
  - ms5floor.com
  - www.ms5floor.com
  - api.ms5floor.com
  gateways:
  - ms5-frontend-gateway
  http:
  # Canary traffic routing
  - match:
    - headers:
        canary:
          exact: "true"
    - headers:
        x-canary:
          exact: "true"
    - headers:
        user-agent:
          regex: ".*canary.*"
    route:
    - destination:
        host: ms5-frontend-canary
        port:
          number: 80
      weight: 100
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
  # Stable traffic routing
  - route:
    - destination:
        host: ms5-frontend-stable
        port:
          number: 80
      weight: 90
    - destination:
        host: ms5-frontend-canary
        port:
          number: 80
      weight: 10
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
