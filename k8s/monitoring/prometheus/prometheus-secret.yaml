---
# MS5.0 Floor Dashboard - Prometheus Secrets Configuration
# Sensitive configuration data from Azure Key Vault integration
apiVersion: v1
kind: Secret
metadata:
  name: prometheus-secrets
  namespace: monitoring
  labels:
    app: ms5-dashboard
    component: prometheus
    environment: production
  annotations:
    description: "Prometheus sensitive configuration and credentials"
    managed-by: "ms5-devops-team"
type: Opaque
data:
  # Base64 encoded values - these should be replaced with actual values from Azure Key Vault
  # Example: echo -n "your-secret-value" | base64
  azure_client_id: ""  # Azure AD client ID for authentication
  azure_client_secret: ""  # Azure AD client secret
  azure_tenant_id: ""  # Azure AD tenant ID
  azure_subscription_id: ""  # Azure subscription ID
  grafana_admin_password: ""  # Grafana admin password
  alertmanager_webhook_url: ""  # AlertManager webhook URL
  smtp_password: ""  # SMTP password for email notifications
  slack_webhook_url: ""  # Slack webhook URL for notifications
  teams_webhook_url: ""  # Microsoft Teams webhook URL
  pagerduty_service_key: ""  # PagerDuty service key
---
# Service Account for Prometheus with proper RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: ms5-dashboard
    component: prometheus
    environment: production
  annotations:
    description: "Service account for Prometheus with Kubernetes API access"
    managed-by: "ms5-devops-team"
---
# ClusterRole for Prometheus with necessary permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  labels:
    app: ms5-dashboard
    component: prometheus
    environment: production
  annotations:
    description: "ClusterRole for Prometheus with Kubernetes API and node access"
    managed-by: "ms5-devops-team"
rules:
# Kubernetes API access for service discovery
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - configmaps
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch"]
# Non-resource URLs for metrics endpoints
- nonResourceURLs: ["/metrics", "/stats", "/stats/prometheus"]
  verbs: ["get"]
---
# ClusterRoleBinding to bind the ServiceAccount to the ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  labels:
    app: ms5-dashboard
    component: prometheus
    environment: production
  annotations:
    description: "ClusterRoleBinding for Prometheus service account"
    managed-by: "ms5-devops-team"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
