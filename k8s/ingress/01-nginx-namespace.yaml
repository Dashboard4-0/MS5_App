---
# NGINX Ingress Controller Namespace
# Provides isolated namespace for ingress controller components
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
  labels:
    name: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.2"
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    # Security and compliance labels
    security.kubernetes.io/enforce-pod-security-standards: "restricted"
    compliance.kubernetes.io/audit-level: "high"
    environment: production
    tier: infrastructure
  annotations:
    description: "NGINX Ingress Controller namespace for MS5.0 Floor Dashboard"
    contact: "team@ms5floor.com"
    version: "1.0.0"
    # Resource quotas and limits
    scheduler.alpha.kubernetes.io/critical-pod: "true"
    # Monitoring and observability
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/path: "/metrics"
---
# NGINX Ingress Controller Service Account
# Provides RBAC permissions for ingress controller operations
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.2"
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: ingress-nginx
  namespace: ingress-nginx
  annotations:
    description: "Service account for NGINX Ingress Controller"
    azure.workload.identity/client-id: "${AZURE_CLIENT_ID}"
    azure.workload.identity/tenant-id: "${AZURE_TENANT_ID}"
automountServiceAccountToken: true
---
# NGINX Ingress Controller ClusterRole
# Defines cluster-wide permissions for ingress controller
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.2"
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: ingress-nginx
rules:
  # Core Kubernetes API permissions
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  # Ingress API permissions
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  # ConfigMap permissions for dynamic configuration
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "ingress-controller-leader"
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Lease permissions for leader election
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - "ingress-controller-leader"
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  # Pod permissions for health checks
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  # Service permissions for status updates
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  # Endpoint permissions for service discovery
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
---
# NGINX Ingress Controller ClusterRoleBinding
# Binds the service account to the cluster role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.2"
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
---
# NGINX Ingress Controller Role
# Defines namespace-specific permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.2"
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: ingress-nginx
  namespace: ingress-nginx
rules:
  # ConfigMap permissions for dynamic configuration
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "ingress-controller-leader"
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Pod permissions for health checks
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  # Service permissions for status updates
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  # Endpoint permissions for service discovery
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  # Event permissions for status reporting
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# NGINX Ingress Controller RoleBinding
# Binds the service account to the role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/version: "1.8.2"
    app.kubernetes.io/component: controller
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/managed-by: Helm
  name: ingress-nginx
  namespace: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ingress-nginx
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx
