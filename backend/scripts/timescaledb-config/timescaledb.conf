# =============================================================================
# MS5.0 TimescaleDB Configuration
# =============================================================================
#
# Purpose: Production-grade TimescaleDB configuration for cosmic-scale operations
# Architecture: Optimized for time-series data with factory telemetry workloads
#
# This configuration is designed for:
# - High-frequency metric ingestion (1000+ records/second)
# - Efficient time-series compression (70%+ compression ratio)
# - Optimal query performance (<100ms for dashboard queries)
# - Reliable data retention and cleanup
#
# Configuration sections:
# 1. Memory Management - Optimized for time-series workloads
# 2. Query Planning - Enhanced for analytical queries
# 3. Compression Settings - Balanced compression and performance
# 4. Background Jobs - Automated maintenance and optimization
# 5. Logging - Comprehensive monitoring and debugging
#
# Author: MS5.0 Systems Architecture Team
# Version: 1.0.0
# Last Updated: 2024-12-19
# =============================================================================

# =============================================================================
# MEMORY MANAGEMENT - COSMIC-SCALE OPTIMIZATION
# =============================================================================

# Shared buffers: 25% of total memory for optimal time-series performance
shared_buffers = 2GB

# Effective cache size: 75% of total memory (PostgreSQL + OS cache)
effective_cache_size = 6GB

# Work memory for complex queries and sorting
work_mem = 64MB

# Maintenance work memory for VACUUM, CREATE INDEX, etc.
maintenance_work_mem = 512MB

# Hash table memory for hash joins
hash_mem_multiplier = 2.0

# =============================================================================
# QUERY PLANNING & OPTIMIZATION
# =============================================================================

# Enable parallel query execution for analytical workloads
max_parallel_workers_per_gather = 4
max_parallel_workers = 8
max_parallel_maintenance_workers = 4

# Cost-based optimizer settings for time-series queries
random_page_cost = 1.1  # SSD-optimized
seq_page_cost = 1.0

# Enable JIT compilation for complex analytical queries
jit = on
jit_above_cost = 100000
jit_inline_above_cost = 500000
jit_optimize_above_cost = 500000

# =============================================================================
# TIMESCALEDB-SPECIFIC SETTINGS
# =============================================================================

# Maximum number of background workers for TimescaleDB operations
timescaledb.max_background_workers = 8

# Compression settings for optimal space utilization
timescaledb.compress_segmentby = 'metric_def_id,line_id'
timescaledb.compress_orderby = 'ts DESC'

# Chunk time interval for optimal query performance
timescaledb.chunk_time_interval = '1 hour'

# =============================================================================
# CONNECTION MANAGEMENT
# =============================================================================

# Maximum number of concurrent connections
max_connections = 200

# Connection timeout settings
tcp_keepalives_idle = 600
tcp_keepalives_interval = 30
tcp_keepalives_count = 3

# =============================================================================
# LOGGING & MONITORING - NASA-GRADE PRECISION
# =============================================================================

# Log level for production monitoring
log_min_messages = warning
log_min_error_statement = error
log_min_duration_statement = 1000  # Log queries > 1 second

# Log slow queries for performance optimization
log_slow_queries = on
log_slow_query_threshold = 1000

# Log connection attempts and disconnections
log_connections = on
log_disconnections = on

# Log lock waits for deadlock detection
log_lock_waits = on

# Log checkpoint activity
log_checkpoints = on

# =============================================================================
# CHECKPOINT & WAL SETTINGS
# =============================================================================

# Checkpoint settings for time-series workloads
checkpoint_completion_target = 0.9
checkpoint_timeout = 15min
checkpoint_warning = 30s

# WAL settings for high-throughput ingestion
wal_buffers = 64MB
wal_level = replica
max_wal_size = 4GB
min_wal_size = 1GB

# =============================================================================
# AUTOVACUUM & MAINTENANCE
# =============================================================================

# Autovacuum settings for time-series data
autovacuum = on
autovacuum_max_workers = 6
autovacuum_naptime = 30s

# Aggressive autovacuum for high-frequency updates
autovacuum_vacuum_threshold = 50
autovacuum_analyze_threshold = 50
autovacuum_vacuum_scale_factor = 0.1
autovacuum_analyze_scale_factor = 0.05

# =============================================================================
# STATISTICS & MONITORING
# =============================================================================

# Enhanced statistics collection for query optimization
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all

# Statistics target for better query planning
default_statistics_target = 1000

# =============================================================================
# SECURITY & AUTHENTICATION
# =============================================================================

# Connection security
ssl = prefer
password_encryption = scram-sha-256

# Row-level security for multi-tenant data
row_security = on

# =============================================================================
# LOCALE & ENCODING
# =============================================================================

# Consistent locale settings for cross-platform compatibility
lc_messages = 'C'
lc_monetary = 'C'
lc_numeric = 'C'
lc_time = 'C'
default_text_search_config = 'pg_catalog.english'

# UTF-8 encoding for international character support
client_encoding = 'UTF8'
